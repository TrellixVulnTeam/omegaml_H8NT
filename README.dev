What you need
-------------

MySql
RabbitMq
MongoDB

To use behave
https://sites.google.com/a/chromium.org/chromedriver/downloads

Setup
-----

1. Install all the software required

   $ conda install --file conda-requirements.txt
   $ pip insatll --file pip-requirements.txt
   $ pip install --file requirements.dev

Configure jupyter hub user. This must match the OMEGA_JYHUB_USER and OMEGA_JYHUB_APIKEY env variables
on web and omjobs.

    $ manage.py omsetupuser --username jyadmin --apikey b7b034f57d442e605ab91f88a8936149e968e12e --staff

Execute locally
---------------

Automated:

    $ rm db.sqlite3
    $ scripts/initlocal.sh

Manually:

Start mongo db for dev purpose. Will be served on port 27019

    $ docker-compose -f docker-compose-mongo.yml up -d
    $ cat scripts/mongoinit.js | docker exec -i omegaml_mongo_1 mongo

Start services using honcho::

    # PORT=8000 sets the web apps server in conf_gunicorn
    $ PORT=8000 honcho start web notebook worker

* PORT=8000 sets the web apps server in conf_gunicorn

Test locally
------------

1. Run the cluster

   $ honcho start web worker notebook

2. Use behave

    $ scripts/livetest.sh --url http://localhost:8000


Local Kubernetes Deployment
---------------------------

1. install microk8s
2. enable the private docker repo:

    # see https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#create-a-secret-in-the-cluster-that-holds-your-authorization-token
    $ kubectl create secret docker-registry regcred --docker-server=<your-registry-server> --docker-username=<your-name> --docker-password=<your-pword> --docker-email=<your-email>

3. set the kubernetes configuration
